ervices:
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    restart: unless-stopped
    ports:
      - 8096:8096
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ./HDD1_4TB/SERIES:/media/tv"
      - ./HDD1_4TB/PELICULAS:/media/PELISTIGRE
      - ./HDD1_4TB/PELICULAS CAMELLO_NUEVOS:/media/PELISCAMELLNEW
      - ./HDD1_4TB/PELICULAS CAMELLO:/media/PELISCAMELLO
      - ./HDD1_4TB/ALICIA:/media/ALICIA
      - /etc/localtime:/etc/localtime:ro
    user: "1000:1000"
    labels:
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)"
  sonarr:
    container_name: sonarr
#    image: linuxserver/sonarr:preview
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./sonarr:/config
#     - ./HDD1_4TB/DOWNLOADS:/downloads
      - ./HDD1_4TB/SERIES:/downloads
      - .//HDD1_4TB/SERIES:/tv
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - jackett
      - deluge
    labels:
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./radarr:/config
      - ./HDD1_4TB/DOWNLOADS:/downloads/completed
      - ./HDD1_4TB/PELICULAS:/movies
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - jackett
      - deluge
    labels:
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    restart: unless-stopped
    ports:
      - 3579:3579
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./ombi:/config
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.http.routers.ombi.rule=Host(`ombi.${DOMAIN}`)"
    depends_on:
      - radarr
      - sonarr

  deluge:
    image: linuxserver/deluge
    container_name: deluge
    ports:
      - 8112:8112
      - 8118:8118
      - 58846:58846
      - 58946:58946
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/London
    volumes:
      - ./HDD1_4TB/SERIES:/downloads
      - ./deluge:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    labels:
      - "traefik.http.routers.deluge.rule=Host(`deluge.${DOMAIN}`)"

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    sysctls:
      net.ipv6.conf.all.disable_ipv6: "1"
    ports:
      - 9117:9117
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - SOCKS_PROXY=tor:9050  # Cambia la IP y puerto al servicio `tor`
      - SOCKS_PROXY_VERSION=5
    volumes:
      - ./jackett:/config
      - ${DLDIR}/completed:/downloads
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)"
    depends_on:
      - tor

  tor:
    image: dperson/torproxy
    container_name: tor
    ports:
      - "9050:9050" # Puerto SOCKS5 para conectar
    environment:
      - TRANSPORT_PORT=9050 # Puerto para el proxy
    restart: unless-stopped



#  heimdall:
#    image: linuxserver/heimdall
#    container_name: heimdall
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - TZ=Europe/London
#    volumes:
#      - ./heimdall:/config
#    ports:
#      - "8888:80"
#    restart: unless-stopped
#    labels:
#      - "traefik.http.routers.heimdall.rule=Host(`${DOMAIN}`,`${IP}`)"

  traefik:
    image: traefik:v2.0 # The official v2.0 Traefik docker image
    container_name: traefik
    command: --api --providers.docker # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "80:80" # The HTTP port
      - "9090:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events

#  cadvisor:
#    image: google/cadvisor:v0.33.0
#    container_name: cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
#    restart: unless-stopped
#    ports:
#      - 8080:8080
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"

  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    ports:
      - 3001:3000
    volumes:
      - ./config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations

    environment:
      PUID: $PUID
      PGID: $PGID
